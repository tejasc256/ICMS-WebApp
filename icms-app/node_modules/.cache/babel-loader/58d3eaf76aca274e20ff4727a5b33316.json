{"ast":null,"code":"var _jsxFileName = \"C:\\\\users\\\\priyam\\\\icms-webapp\\\\icms-app\\\\src\\\\components\\\\customerbranchchart.component.js\";\nimport React from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport { MDBContainer } from \"mdbreact\";\nimport axios from 'axios';\n\nclass ChartsPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dataDoughnut: {\n        labels: [\"Red\", \"Green\", \"Yellow\", \"Grey\", \"Dark Grey\"],\n        datasets: [{\n          data: [300, 50, 100, 40, 120],\n          backgroundColor: [\"#F7464A\", \"#46BFBD\", \"#FDB45C\", \"#949FB1\", \"#4D5360\"],\n          hoverBackgroundColor: [\"#FF5A5E\", \"#5AD3D1\", \"#FFC870\", \"#A8B3C5\", \"#616774\"]\n        }]\n      }\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:4000/ceo/customerbranchcountchcart').then(response => {\n      this.setState({\n        data1: response.data.map(function (current_count, i) {\n          return Object.values(current_count)[0];\n        })\n      });\n      this.state.dataDoughnut.datasets[0].data = this.state.data1;\n      console.log(this.state.data1);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return React.createElement(MDBContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"mt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Customers per branch\"), React.createElement(Doughnut, {\n      data: this.state.dataDoughnut,\n      options: {\n        responsive: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ChartsPage;","map":{"version":3,"sources":["C:/users/priyam/icms-webapp/icms-app/src/components/customerbranchchart.component.js"],"names":["React","Doughnut","MDBContainer","axios","ChartsPage","Component","state","dataDoughnut","labels","datasets","data","backgroundColor","hoverBackgroundColor","componentDidMount","get","then","response","setState","data1","map","current_count","i","Object","values","console","log","catch","error","render","responsive"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,YAAT,QAA6B,UAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACzCC,KADyC,GACjC;AACNC,MAAAA,YAAY,EAAE;AACZC,QAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,OAAR,EAAiB,QAAjB,EAA2B,MAA3B,EAAmC,WAAnC,CADI;AAEZC,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,EAAN,EAAU,GAAV,EAAe,EAAf,EAAmB,GAAnB,CADR;AAEEC,UAAAA,eAAe,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,CAFnB;AAGEC,UAAAA,oBAAoB,EAAE,CACpB,SADoB,EAEpB,SAFoB,EAGpB,SAHoB,EAIpB,SAJoB,EAKpB,SALoB;AAHxB,SADQ;AAFE;AADR,KADiC;AAAA;;AAoBzCC,EAAAA,iBAAiB,GAAG;AAChBV,IAAAA,KAAK,CAACW,GAAN,CAAU,qDAAV,EACKC,IADL,CACUC,QAAQ,IAAI;AACd,WAAKC,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAGF,QAAQ,CAACN,IAAT,CAAcS,GAAd,CAAkB,UAASC,aAAT,EAAuBC,CAAvB,EAAyB;AACjE,iBAAQC,MAAM,CAACC,MAAP,CAAcH,aAAd,EAA6B,CAA7B,CAAR;AACD,SAFuB;AAAV,OAAd;AAGA,WAAKd,KAAL,CAAWC,YAAX,CAAwBE,QAAxB,CAAiC,CAAjC,EAAoCC,IAApC,GAA2C,KAAKJ,KAAL,CAAWY,KAAtD;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKnB,KAAL,CAAWY,KAAvB;AACD,KAPP,EASKQ,KATL,CASW,UAAUC,KAAV,EAAgB;AACnBH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACH,KAXL;AAYH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACA,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEE,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAE,KAAKtB,KAAL,CAAWC,YAA3B;AAAyC,MAAA,OAAO,EAAE;AAAEsB,QAAAA,UAAU,EAAE;AAAd,OAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADA;AAMD;;AA1CsC;;AA6CzC,eAAezB,UAAf","sourcesContent":["import React from \"react\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport { MDBContainer } from \"mdbreact\";\r\nimport axios from 'axios';\r\n\r\nclass ChartsPage extends React.Component {\r\nstate = {\r\n  dataDoughnut: {\r\n    labels: [\"Red\", \"Green\", \"Yellow\", \"Grey\", \"Dark Grey\"],\r\n    datasets: [\r\n      {\r\n        data: [300, 50, 100, 40, 120],\r\n        backgroundColor: [\"#F7464A\", \"#46BFBD\", \"#FDB45C\", \"#949FB1\", \"#4D5360\"],\r\n        hoverBackgroundColor: [\r\n          \"#FF5A5E\",\r\n          \"#5AD3D1\",\r\n          \"#FFC870\",\r\n          \"#A8B3C5\",\r\n          \"#616774\"\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n}\r\n\r\ncomponentDidMount() {\r\n    axios.get('http://localhost:4000/ceo/customerbranchcountchcart')\r\n        .then(response => {\r\n            this.setState({ data1 : response.data.map(function(current_count,i){\r\n              return (Object.values(current_count)[0])\r\n            })});\r\n            this.state.dataDoughnut.datasets[0].data = this.state.data1;\r\n            console.log(this.state.data1);\r\n          }\r\n        )\r\n        .catch(function (error){\r\n            console.log(error);\r\n        }   )\r\n}\r\n\r\nrender() {\r\n    return (\r\n    <MDBContainer>\r\n      <h3 className=\"mt-5\">Customers per branch</h3>\r\n      <Doughnut data={this.state.dataDoughnut} options={{ responsive: true }} />\r\n    </MDBContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChartsPage;"]},"metadata":{},"sourceType":"module"}