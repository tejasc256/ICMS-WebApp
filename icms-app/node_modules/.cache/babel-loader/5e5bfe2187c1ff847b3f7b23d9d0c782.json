{"ast":null,"code":"var _jsxFileName = \"C:\\\\users\\\\priyam\\\\icms-webapp\\\\icms-app\\\\src\\\\components\\\\requestsperagentchart.component.js\";\nimport React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { MDBContainer } from \"mdbreact\";\nimport axios from 'axios';\n\nclass ChartsPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dataLine: {\n        labels: [],\n        datasets: [{\n          label: \"Requests fulfilled\",\n          fill: true,\n          lineTension: 0.3,\n          backgroundColor: \"rgba(225, 204,230, .3)\",\n          borderColor: \"rgb(205, 130, 158)\",\n          borderCapStyle: \"butt\",\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: \"miter\",\n          pointBorderColor: \"rgb(205, 130,1 58)\",\n          pointBackgroundColor: \"rgb(255, 255, 255)\",\n          pointBorderWidth: 10,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n          pointHoverBorderColor: \"rgba(220, 220, 220,1)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: [65, 59, 80, 81, 56, 55, 40]\n        }]\n      }\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:4000/ceo/requestsperagentchart').then(response => {\n      this.setState({\n        dataLine: {\n          labels: response.data.map(function (current_count, i) {\n            return Object.values(current_count)[0];\n          }),\n          datasets: [{\n            label: \"Requests fulfilled\",\n            fill: true,\n            lineTension: 0.3,\n            backgroundColor: \"rgba(225, 204,230, .3)\",\n            borderColor: \"rgb(205, 130, 158)\",\n            borderCapStyle: \"butt\",\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: \"miter\",\n            pointBorderColor: \"rgb(205, 130,1 58)\",\n            pointBackgroundColor: \"rgb(255, 255, 255)\",\n            pointBorderWidth: 10,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n            pointHoverBorderColor: \"rgba(220, 220, 220,1)\",\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n            data: response.data.map(function (current_count, i) {\n              return Object.values(current_count)[1];\n            })\n          }]\n        }\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return React.createElement(MDBContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"mt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Policies sold by Agents\"), React.createElement(Line, {\n      data: this.state.dataLine,\n      options: {\n        responsive: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ChartsPage;","map":{"version":3,"sources":["C:/users/priyam/icms-webapp/icms-app/src/components/requestsperagentchart.component.js"],"names":["React","Line","MDBContainer","axios","ChartsPage","Component","state","dataLine","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data","componentDidMount","get","then","response","setState","map","current_count","i","Object","values","catch","error","console","log","render","responsive"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { MDBContainer } from \"mdbreact\";\r\nimport axios from 'axios';\r\n\r\nclass ChartsPage extends React.Component {\r\n  state = {\r\n    dataLine: {\r\n      labels: [],\r\n      datasets: [\r\n        {\r\n          label: \"Requests fulfilled\",\r\n          fill: true,\r\n          lineTension: 0.3,\r\n          backgroundColor: \"rgba(225, 204,230, .3)\",\r\n          borderColor: \"rgb(205, 130, 158)\",\r\n          borderCapStyle: \"butt\",\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          borderJoinStyle: \"miter\",\r\n          pointBorderColor: \"rgb(205, 130,1 58)\",\r\n          pointBackgroundColor: \"rgb(255, 255, 255)\",\r\n          pointBorderWidth: 10,\r\n          pointHoverRadius: 5,\r\n          pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\r\n          pointHoverBorderColor: \"rgba(220, 220, 220,1)\",\r\n          pointHoverBorderWidth: 2,\r\n          pointRadius: 1,\r\n          pointHitRadius: 10,\r\n          data: [65, 59, 80, 81, 56, 55, 40]\r\n        }\r\n      ]\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios.get('http://localhost:4000/ceo/requestsperagentchart')\r\n        .then(response => {\r\n            this.setState({\r\n                dataLine : {\r\n                    labels : response.data.map(function(current_count,i){\r\n                        return (Object.values(current_count)[0])\r\n                      }),\r\n                      datasets : [\r\n                        {\r\n                            label: \"Requests fulfilled\",\r\n                            fill: true,\r\n                            lineTension: 0.3,\r\n                            backgroundColor: \"rgba(225, 204,230, .3)\",\r\n                            borderColor: \"rgb(205, 130, 158)\",\r\n                            borderCapStyle: \"butt\",\r\n                            borderDash: [],\r\n                            borderDashOffset: 0.0,\r\n                            borderJoinStyle: \"miter\",\r\n                            pointBorderColor: \"rgb(205, 130,1 58)\",\r\n                            pointBackgroundColor: \"rgb(255, 255, 255)\",\r\n                            pointBorderWidth: 10,\r\n                            pointHoverRadius: 5,\r\n                            pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\r\n                            pointHoverBorderColor: \"rgba(220, 220, 220,1)\",\r\n                            pointHoverBorderWidth: 2,\r\n                            pointRadius: 1,\r\n                            pointHitRadius: 10,\r\n                            data: response.data.map(function(current_count,i){\r\n                                return (Object.values(current_count)[1])})\r\n                          }\r\n                      ]\r\n                }\r\n            });\r\n          }\r\n        )\r\n        .catch(function (error){\r\n            console.log(error);\r\n        }   )\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <MDBContainer>\r\n        <h3 className=\"mt-5\">Policies sold by Agents</h3>\r\n        <Line data={this.state.dataLine} options={{ responsive: true }} />\r\n      </MDBContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChartsPage;"]},"metadata":{},"sourceType":"module"}