{"ast":null,"code":"var _jsxFileName = \"/home/tejas/Documents/Projects/ICMS/ICMS-WebApp/icms-app/src/components/editProfile.component.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Form, Button } from 'react-bootstrap';\nexport default class editProfile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstname: '',\n      lastname: '',\n      dob: '',\n      branch: '',\n      branches: []\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChangeFirstName = this.onChangeFirstName.bind(this);\n    this.onChangeLastName = this.onChangeLastName.bind(this);\n    this.populateBranches = this.populateBranches.bind(this);\n    this.onChangeBranch = this.onChangeBranch.bind(this);\n    this.onChangeDOB = this.onChangeDOB.bind(this);\n    this.checkAge = this.checkAge.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:4000/branch').then(response => {\n      console.log(response.data);\n      this.setState({\n        branches: response.data\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  onChangeFirstName(e) {\n    this.setState({\n      firstname: e.target.value\n    });\n  }\n\n  onChangeLastName(e) {\n    this.setState({\n      lastname: e.target.value\n    });\n  }\n\n  onChangeBranch(e) {\n    this.setState({\n      branch: e.target.value\n    });\n    console.log(this.state.branch);\n  }\n\n  onChangeDOB(e) {\n    this.setState({\n      dob: e.target.value\n    });\n  }\n\n  populateBranches() {\n    return this.state.branches.map(function (current, i) {\n      return React.createElement(\"option\", {\n        value: current.branch_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, current.city);\n    });\n  }\n\n  checkAge() {\n    var oneyear = 1000 * 60 * 60 * 24 * 30 * 12;\n    var present = new Date();\n    var difference = (present.getTime() - this.state.dob.getTime()) / oneyear;\n    console.log(difference);\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    if (!this.state.branch) {\n      this.checkAge();\n      alert('Please Choose Branch');\n    } else {\n      axios.post('http://localhost:4000/customer', {\n        firstname: this.state.firstname,\n        lastname: this.state.lastname,\n        dob: this.state.dob,\n        branch: this.state.branch\n      }, {\n        withCredentials: true\n      }).then(response => {\n        this.props.history.push(\"/dashboard\");\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Profile Details\"), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"formBasicEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"First Name\"), React.createElement(Form.Control, {\n      type: \"text\",\n      onChange: this.onChangeFirstName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"formBasicEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Last Name\"), React.createElement(Form.Control, {\n      type: \"text\",\n      onChange: this.onChangeLastName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"formBasicEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Date of Birth Name\"), React.createElement(Form.Control, {\n      type: \"date\",\n      onChange: this.onChangeDOB,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"formGridState\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Branch\"), React.createElement(Form.Control, {\n      as: \"select\",\n      onChange: this.onChangeBranch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Choose Branch...\"), this.populateBranches())), React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Set Up Profile\")));\n  }\n\n}","map":{"version":3,"sources":["/home/tejas/Documents/Projects/ICMS/ICMS-WebApp/icms-app/src/components/editProfile.component.js"],"names":["React","Component","axios","Form","Button","editProfile","constructor","props","state","firstname","lastname","dob","branch","branches","onSubmit","bind","onChangeFirstName","onChangeLastName","populateBranches","onChangeBranch","onChangeDOB","checkAge","componentDidMount","get","then","response","console","log","data","setState","catch","err","e","target","value","map","current","i","branch_id","city","oneyear","present","Date","difference","getTime","preventDefault","alert","post","withCredentials","history","push","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport{ Form, Button } from 'react-bootstrap';\n\nexport default class editProfile extends  Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            firstname: '',\n            lastname: '',\n            dob: '',\n            branch: '',\n            branches: []\n        }\n\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChangeFirstName = this.onChangeFirstName.bind(this);\n        this.onChangeLastName = this.onChangeLastName.bind(this);\n        this.populateBranches = this.populateBranches.bind(this);\n        this.onChangeBranch = this.onChangeBranch.bind(this);\n        this.onChangeDOB = this.onChangeDOB.bind(this);\n        this.checkAge = this.checkAge.bind(this);\n    }\n\n    componentDidMount(){\n        axios.get('http://localhost:4000/branch')\n        .then(response => {\n            console.log(response.data);\n            this.setState({\n                branches: response.data\n            });\n        })\n        .catch(err => {\n            console.log(err);\n        });\n    }\n\n    onChangeFirstName(e){\n        this.setState({\n            firstname: e.target.value\n        });\n    }\n\n    onChangeLastName(e){\n        this.setState({\n            lastname: e.target.value\n        });\n    }\n\n    onChangeBranch(e){\n        this.setState({\n            branch: e.target.value\n        });\n        console.log(this.state.branch);\n    }\n\n    onChangeDOB(e){\n        this.setState({\n            dob: e.target.value\n        });\n    }\n\n    populateBranches(){\n        return this.state.branches.map(function(current, i) {\n            return(<option value={current.branch_id}>{current.city}</option>)\n        });\n    }\n\n    checkAge(){\n        var oneyear = 1000*60*60*24*30*12;\n        var present = new Date();\n        var difference = (present.getTime() - this.state.dob.getTime())/oneyear;\n        console.log(difference);\n    }\n\n\n    onSubmit(e){\n        e.preventDefault();\n        if(!this.state.branch){\n            this.checkAge();\n            alert('Please Choose Branch');\n        }\n        else{\n            axios.post('http://localhost:4000/customer', {firstname: this.state.firstname, lastname: this.state.lastname, dob: this.state.dob, branch: this.state.branch}, {withCredentials: true}).then(response => {\n                this.props.history.push(\"/dashboard\");\n            }).catch(function(err) {\n                console.log(err);\n            });\n        }\n\n    }\n\n    render(){\n        return (\n            <div>\n                <h3>Profile Details</h3>\n                    <Form>\n                        <Form.Group controlId=\"formBasicEmail\">\n                            <Form.Label>First Name</Form.Label>\n                            <Form.Control type=\"text\" onChange={this.onChangeFirstName} />\n                        </Form.Group>\n                        <Form.Group controlId=\"formBasicEmail\">\n                            <Form.Label>Last Name</Form.Label>\n                            <Form.Control type=\"text\" onChange={this.onChangeLastName}/>\n                        </Form.Group>\n                        <Form.Group controlId=\"formBasicEmail\">\n                            <Form.Label>Date of Birth Name</Form.Label>\n                            <Form.Control type=\"date\" onChange={this.onChangeDOB}/>\n                        </Form.Group>\n                        <Form.Group controlId=\"formGridState\">\n                            <Form.Label>Branch</Form.Label>\n                            <Form.Control as=\"select\" onChange={this.onChangeBranch}>\n                                <option>Choose Branch...</option>\n                                {this.populateBranches()}\n                            </Form.Control>\n                        </Form.Group>\n                        <Button variant=\"primary\" onClick={this.onSubmit}>\n                            Set Up Profile\n                        </Button>\n                    </Form>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}